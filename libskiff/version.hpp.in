#ifndef @PROJECT_NAME_UPPERCASE@_VERSION_
#define @PROJECT_NAME_UPPERCASE@_VERSION_

#define @PROJECT_NAME_UPPERCASE@_MAJOR_VERSION (@MAJOR_VERSION@)
#define @PROJECT_NAME_UPPERCASE@_MINOR_VERSION (@MINOR_VERSION@)
#define @PROJECT_NAME_UPPERCASE@_PATCH_VERSION (@PATCH_VERSION@)
#define @PROJECT_NAME_UPPERCASE@_VERSION "@PROJECT_VERSION@"

#include <libskiff/types.hpp>

namespace libskiff {
namespace version {
static constexpr libskiff::types::semver_t semantic_version = {
    .major = @PROJECT_NAME_UPPERCASE@_MAJOR_VERSION, 
    .minor = @PROJECT_NAME_UPPERCASE@_MINOR_VERSION, 
    .patch = @PROJECT_NAME_UPPERCASE@_PATCH_VERSION};
}
} // namespace libskiff

#endif  // @PROJECT_NAME_UPPERCASE@_VERSION_
